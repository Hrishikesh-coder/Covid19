Index: templates/news.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% load static %}\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <!-- Required meta tags -->\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n\r\n    <!-- My Style Sheets -->\r\n    <link rel=\"stylesheet\" href=\"{% static 'main.css' %}\">\r\n    \r\n    <!-- Bootstrap CSS -->\r\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\r\n\r\n    <!-- Font Awesome Script -->\r\n    <script src=\"https://kit.fontawesome.com/74ba14d0ba.js\" crossorigin=\"anonymous\"></script>\r\n\r\n    <title>Covid Info</title>\r\n  </head>\r\n  <body>\r\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <a class=\"navbar-brand\" href=\"#\">COVID INFO</a>\r\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n    \r\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href='/'><i class=\"fas fa-home\"></i> Home <span class=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li class=\"nav-item active\">\r\n            <a class=\"nav-link\" href=\"/news\"><i class=\"far fa-newspaper\"></i>News</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"/world\"><i class=\"fas fa-globe\"></i>World</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"/country\"><i class=\"fas fa-flag\"></i>  Country-Wise</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"/tips\"><i class=\"fas fa-question\"></i> Tips and Tricks</a>\r\n          </li>\r\n        </ul>\r\n        <form class=\"form-inline my-2 my-lg-0\" action=\"{% url 'search' %}\" method='post'>\r\n          {% csrf_token %}\r\n          <input class=\"form-control mr-sm-2\" type=\"search\" name='data' placeholder=\"Search\" aria-label=\"Search\">\r\n          <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n\r\n\r\n\r\n    {% for news in latest_news %}\r\n    <a href=\"news-detail/{{news.id}}\">\r\n      <div class=\"card\" style=\"height:350px;width: 18rem;padding-left:20px;margin-top:20px;display: inline-block;\">\r\n        <img class=\"card-img-top\" src=\"{{news.img.url}}\" alt=\"Card image cap\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">{{news.heading}}</h5>\r\n          <p class=\"card-text\">{{news.body}}</p>\r\n          <a href=\"#\" class=\"btn btn-primary\">{{news.date}}</a>\r\n        </div>\r\n      </div>\r\n    </a>\r\n    {% endfor %}\r\n\r\n\r\n\r\n        <!-- Optional JavaScript -->\r\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\r\n    \r\n    <script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\" integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\" crossorigin=\"anonymous\"></script>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\" integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\" crossorigin=\"anonymous\"></script>\r\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"></script>\r\n  </body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/news.html	(revision 1c68ff1c88335d2437f07cf9f4a5d40b057823a7)
+++ templates/news.html	(date 1587980377642)
@@ -56,7 +56,7 @@
     {% for news in latest_news %}
     <a href="news-detail/{{news.id}}">
       <div class="card" style="height:350px;width: 18rem;padding-left:20px;margin-top:20px;display: inline-block;">
-        <img class="card-img-top" src="{{news.img.url}}" alt="Card image cap">
+        <img class="card-img-top" src="{{news.img.url}}" width="150px" alt="Card image cap">
         <div class="card-body">
           <h5 class="card-title">{{news.heading}}</h5>
           <p class="card-text">{{news.body}}</p>
Index: covid/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render\r\nfrom django.http import HttpResponse\r\nfrom .models import News, CountryData\r\nfrom bs4 import BeautifulSoup\r\nimport requests\r\nfrom datetime import datetime\r\nimport sys\r\n\r\ndef my_int(str):\r\n    if str.strip().isnumeric():\r\n        return int(str)\r\n    else:\r\n        return 0\r\n\r\ndef tips(request):\r\n    return render(request,'tips.html')\r\n\r\ndef scrape():\r\n    source = requests.get('https://www.worldometers.info/coronavirus/').text\r\n    soup = BeautifulSoup(source, 'lxml')\r\n\r\n    countries = soup.find_all('tr')\r\n    countries = countries[9:221]\r\n\r\n    for country in countries:\r\n\r\n        rows = country.find_all('td')\r\n        rows = list(map(lambda x:str(x.text).replace(',', ''), rows))\r\n\r\n        name = rows[0]\r\n        \r\n        country = '-'.join(name.split())\r\n        url = f\"https://www.countries-ofthe-world.com/flags-normal/flag-of-{country}.png\"\r\n\r\n\r\n        my_country              = CountryData()\r\n        my_country.name         = name\r\n        my_country.totalcase    = my_int(rows[1])\r\n        my_country.activecase   = my_int(rows[6])\r\n        my_country.newcase      = my_int(rows[2].replace('+', ''))\r\n        my_country.deaths       = my_int(rows[3])\r\n        my_country.newdeath     = my_int(rows[4].replace('+', ''))\r\n        my_country.recovered    = my_int(rows[5])\r\n        my_country.tests        = my_int(rows[10])\r\n        my_country.flag         = url\r\n\r\n        my_country.save()\r\n\r\n\r\ndef scrape_world():\r\n    source = requests.get('https://www.worldometers.info/coronavirus/').text\r\n    soup = BeautifulSoup(source, 'lxml')\r\n\r\n    totals = soup.find_all('div', class_='maincounter-number')\r\n    world_data = []\r\n    for total in totals:\r\n        world_data.append(total.span.text)\r\n\r\n    return world_data\r\n\r\n\r\ndef scrape_news():\r\n    source = requests.get('https://www.indiatimes.com/').text\r\n    soup = BeautifulSoup(source, 'lxml')\r\n\r\n    articles = soup.find_all('div', class_='card-div')\r\n    articles = articles[0:len(articles)-1]\r\n\r\n    for article in articles:\r\n        last_id = News.objects.latest('id').id\r\n        title = article.a['title']\r\n        url = article.a['href']\r\n        img = article.img['src']\r\n\r\n        r = requests.get(img, allow_redirects=True)\r\n        open(f'media/{last_id+1}.jpg', 'wb').write(r.content)\r\n\r\n        text_source = requests.get(url).text\r\n        text_soup = BeautifulSoup(text_source, 'lxml')\r\n\r\n        div = text_soup.article.find_all('div', class_='left-container')\r\n        text = str()\r\n        ps = div[0].find_all('p', class_=None)\r\n        for p in ps:\r\n            text += p.text\r\n\r\n        news = News()\r\n        news.heading = title\r\n        news.body = text\r\n        news.img = str(last_id+1) + '.jpg'\r\n        news.date = str(datetime.now())[:10]\r\n        news.save()\r\n\r\ndef home(request):\r\n    return render(request, 'home.html')\r\n\r\ndef news(request):\r\n    # scrape_news()\r\n    latest_news = News.objects.all()\r\n    return render(request, 'news.html', {'latest_news': latest_news})\r\n\r\ndef country(request, country_name='all'):\r\n    if country_name == 'all':\r\n        scrape()\r\n        countries = CountryData.objects.order_by('-totalcase')\r\n        return render(request, 'country.html', {'countries': countries})\r\n    else:\r\n        country_data = CountryData.objects.get(name__iexact=f'{country_name}')\r\n        return render(request, 'country.html', {'country': country_data})\r\n\r\ndef world(request):\r\n    world_data = scrape_world()\r\n    return render(request, 'world.html', {'world_total': world_data[0], 'world_death': world_data[1], 'world_recovery': world_data[2]})\r\n\r\ndef search(request):\r\n\r\n    if request.method == \"POST\":\r\n        data = request.POST['data']\r\n        news = News.objects.filter(heading__contains=data)\r\n        return render(request,'searchnews.html', {'news':news})\r\n    else:\r\n        pass\r\n\r\n    return redirect('/')\r\n\r\n\r\ndef news_detail(request, news_id):\r\n    return render(request, 'news-detail.html', {'news': news_id})
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- covid/views.py	(revision 1c68ff1c88335d2437f07cf9f4a5d40b057823a7)
+++ covid/views.py	(date 1587980414823)
@@ -95,7 +95,7 @@
     return render(request, 'home.html')
 
 def news(request):
-    # scrape_news()
+    #scrape_news()
     latest_news = News.objects.all()
     return render(request, 'news.html', {'latest_news': latest_news})
 
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_15_59__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_15_59__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_21_28__Revert__Minor_changes_-2_.xml .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_21_28__Revert__Minor_changes_-2_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_16_00__Revert__Minor_changes_-2_.xml .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_16_00__Revert__Minor_changes_-2_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_16_00__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_16_00__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_21_28__Revert__Minor_changes_-2_1.xml .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_21_28__Revert__Minor_changes_-2_1.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_21_33__Revert__Made_country_table_dynamic_.xml .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_21_33__Revert__Made_country_table_dynamic_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_21_33__Revert__Minor_changes_-2_.xml .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_21_33__Revert__Minor_changes_-2_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_15_55__Revert__Minor_changes_-2_.xml .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_15_55__Revert__Minor_changes_-2_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_21_27__Revert__Minor_changes_-2_.xml .idea/shelf/Uncommitted_changes_before_Update_at_26-04-2020_21_27__Revert__Minor_changes_-2_.xml
